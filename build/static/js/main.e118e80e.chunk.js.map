{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/SinglePerson.js","components/Persons.js","components/Notifications.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","handleFilter","onChange","PersonForm","props","onSubmit","addName","value","newName","handleNameAdd","newNumber","handleNumberAdd","type","SinglePerson","person","handleDeleting","name","number","onClick","Persons","persons","personsFilter","filteredPersons","filter","toLowerCase","includes","map","key","SuccessNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","setPersonsFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","event","target","preventDefault","newPerson","length","addedPerson","checkPersonAdded","window","confirm","updatedPerson","setTimeout","catch","error","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e118e80e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Filter = ({ handleFilter }) => (\n    <div>\n        filter shown with <input onChange={handleFilter} />\n    </div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = props => (\n    <form onSubmit={props.addName}>\n        <div>\n            name:\n            <input value={props.newName} onChange={props.handleNameAdd} />\n        </div>\n        <div>\n            number:\n            <input value={props.newNumber} onChange={props.handleNumberAdd} />\n        </div>\n        <div>\n            <button type='submit'>add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst SinglePerson = ({ person, handleDeleting }) => (\n    <div>\n        {person.name} {person.number} <button onClick={() => handleDeleting(person.id, person.name)}>delete</button>\n    </div>\n)\n\nexport default SinglePerson\n","import React from 'react'\nimport SinglePerson from './SinglePerson'\n\nconst Persons = ({ persons, personsFilter, handleDeleting }) => {\n    const filteredPersons = personsFilter\n        ? persons.filter(person =>\n              person.name.toLowerCase().includes(personsFilter.toLowerCase())\n          )\n        : persons\n\n    const renderPersons = () =>\n        filteredPersons.map(person => (\n            <SinglePerson key={person.id} person={person} handleDeleting={handleDeleting} />\n        ))\n\n    return <div>{renderPersons()}</div>\n}\n\nexport default Persons\n","import React from \"react\"\n\nexport const SuccessNotification = ({ message }) => {\n    if (message === null) return null\n\n    const notificationStyle = {\n        color: \"green\",\n        background: \"lightgrey\",\n        fontSize: \"20px\",\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n    }\n\n    return <div style={notificationStyle}>{message}</div>\n}\n\nexport const ErrorNotification = ({ message }) => {\n    if (message === null) return null\n\n    const notificationStyle = {\n        color: \"red\",\n        background: \"lightgrey\",\n        fontSize: \"20px\",\n        borderStyle: \"solid\",\n        borderRadius: \"5px\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n    }\n\n    return <div style={notificationStyle}>{message}</div>\n}\n","import React, { useState, useEffect } from 'react'\n\nimport personsService from './services/persons'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport { SuccessNotification, ErrorNotification } from './components/Notifications'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [personsFilter, setPersonsFilter] = useState('')\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(initialPersons => setPersons(initialPersons))\n    }, [])\n\n    const handleNameAdd = event => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberAdd = event => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilter = event => {\n        setPersonsFilter(event.target.value)\n    }\n\n    const handleDeleting = (id, name) => {\n        if (window.confirm(`Delete ${name}?`, false)) {\n            personsService\n                .remove(id)\n                .then(response => {\n                    setPersons(persons.filter(person => person.id !== id))\n                    setSuccessMessage(`Deleted ${name}`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000);\n                })\n                .catch(error => {\n                    setErrorMessage(`The ${name} was already deleted from server`)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000);\n                    setPersons(persons.filter(person => person.id !== id))\n                })\n        }\n    }\n\n    const checkPersonAdded = (persons, newPerson) => {\n        for (let person of persons) {\n            if (person.name.toLowerCase() === newPerson.name.toLowerCase()) {\n                return person\n            }\n        }\n        return false\n    }\n\n    const addName = event => {\n        event.preventDefault()\n\n        const newPerson = {\n            name: newName,\n            number: newNumber,\n            id: persons.length + 1\n        }\n\n        const addedPerson = checkPersonAdded(persons, newPerson)\n        if (addedPerson) {\n            if ( window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`, false) ) {\n                personsService\n                    .update(addedPerson.id, {...addedPerson, number: newPerson.number})\n                    .then(updatedPerson => {\n                        setPersons(persons.map(person => person.id !== addedPerson.id ? person : updatedPerson))\n                        setSuccessMessage(`Updated ${updatedPerson.name}`)\n                        setTimeout(() => {\n                            setSuccessMessage(null)\n                        }, 5000);\n                    })\n                    .catch(error => {\n                        setErrorMessage(`The ${addedPerson.name} was already deleted from server`)\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000);\n                        setPersons(persons.filter(person => person.id !== addedPerson.id))\n                    })\n            }\n        } else {\n            personsService\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setSuccessMessage(`Added ${returnedPerson.name}`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 5000);\n                })\n        }\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    return (\n        <>\n            <h2>Phonebook</h2>\n            <SuccessNotification message={successMessage} />\n            <ErrorNotification message={errorMessage} />\n            <Filter handleFilter={handleFilter} />\n            <h2>Add a new</h2>\n            <PersonForm\n                addName={addName}\n                handleNameAdd={handleNameAdd}\n                handleNumberAdd={handleNumberAdd}\n                newName={newName}\n                newNumber={newNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={persons} personsFilter={personsFilter} handleDeleting={handleDeleting} />\n        </>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}